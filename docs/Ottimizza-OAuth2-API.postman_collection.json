{
	"info": {
		"_postman_id": "b73014de-cdd8-466f-aa59-162d20eae133",
		"name": "Ottimizza OAuth2 API",
		"description": "# Servidor OAuth2.0 para autenticação de microserviços da Ottimizza. ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Organizations",
					"item": [
						{
							"name": "01 - Append Organization",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
										"exec": [
											"const username = pm.environment.get(\"username\");",
											"const password = pm.environment.get(\"password\");",
											"",
											"const client_id = pm.environment.get(\"client_id\");",
											"const client_secret = pm.environment.get(\"client_secret\");",
											"",
											"const url = pm.environment.get(\"base_url\");",
											"",
											"pm.sendRequest({",
											"    url: url + '/oauth/token?grant_type=password',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
											"    },",
											"    body: {",
											"        mode: 'urlencoded',",
											"        urlencoded: [",
											"            { key: \"username\", value: username },",
											"            { key: \"password\", value: password },",
											"        ]",
											"    }",
											"}, function (err, response) {",
											"   pm.environment.set(\"access_token\", response.json().access_token);",
											"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{access_token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": 18\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/v1/users/:id/organizations",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id",
										"organizations"
									],
									"variable": [
										{
											"key": "id",
											"value": "14"
										}
									]
								},
								"description": "# Method for fetching all users.\n\n---\n### URL Params\n> All arguments are **optionals**. <br>\n> All comparisons (except email) are made with **equals** operator.\n\n## **Filtering**:\n```\nid=[number]\nusername=[string]\ntype=[number]\nemail=[string]*\n```\n\n---\n\n## **Pagination**:\n```\npage_index=[number]\npage_size=[number]\n```"
							},
							"response": [
								{
									"name": "01 - Fetch All Users - Filter By Type",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users?type=1",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "type",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 23:48:38 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 2,\n            \"username\": \"dev.lucasmartins@gmail.com\",\n            \"email\": \"dev.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins (Contabilidade)\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 2\n    }\n}"
								},
								{
									"name": "01 - Fetch All Users",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Server",
											"value": "Cowboy"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-Xss-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000 ; includeSubDomains"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 17:48:56 GMT"
										},
										{
											"key": "Via",
											"value": "1.1 vegur"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 2,\n            \"username\": \"dev.lucasmartins@gmail.com\",\n            \"email\": \"dev.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 3\n    }\n}"
								},
								{
									"name": "01 - Fetch All Users - Filter By Id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users?id=20",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "id",
													"value": "20"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 23:47:53 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
								},
								{
									"name": "01 - Fetch All Users - Pagination",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users?page_index=0&page_size=2",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "page_index",
													"value": "0"
												},
												{
													"key": "page_size",
													"value": "2"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 23:51:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": true,\n        \"hasPrevious\": false,\n        \"pageSize\": 2,\n        \"pageIndex\": 0,\n        \"totalPages\": 2,\n        \"totalElements\": 3\n    }\n}"
								},
								{
									"name": "01 - Fetch All Users - Filter By Email",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users?email=mts.lucasmartins@gmail.com",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "email",
													"value": "mts.lucasmartins@gmail.com"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 23:49:55 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
								},
								{
									"name": "01 - Fetch All Users - Filter By Username",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{oauth2_server_url}}/api/v1/users?username=mts.lucasmartins@gmail.com",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"v1",
												"users"
											],
											"query": [
												{
													"key": "username",
													"value": "mts.lucasmartins@gmail.com"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 09 Sep 2019 23:49:15 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "00 - User Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48398e79-2553-4400-b0b6-72f1b911a275",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/oauth/userinfo",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"oauth",
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "01 - Fetch Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users?email=mts.lucasmartins@gmail.com",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "mts.lucasmartins@gmail.com"
								}
							]
						},
						"description": "# Method for fetching all users.\n\n---\n### URL Params\n> All arguments are **optionals**. <br>\n> All comparisons (except email) are made with **equals** operator.\n\n## **Filtering**:\n```\nid=[number]\nusername=[string]\ntype=[number]\nemail=[string]*\n```\n\n---\n\n## **Pagination**:\n```\npage_index=[number]\npage_size=[number]\n```"
					},
					"response": [
						{
							"name": "01 - Fetch All Users - Pagination",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users?page_index=0&page_size=2",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "page_index",
											"value": "0"
										},
										{
											"key": "page_size",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 23:51:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": true,\n        \"hasPrevious\": false,\n        \"pageSize\": 2,\n        \"pageIndex\": 0,\n        \"totalPages\": 2,\n        \"totalElements\": 3\n    }\n}"
						},
						{
							"name": "01 - Fetch All Users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 17:48:56 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 2,\n            \"username\": \"dev.lucasmartins@gmail.com\",\n            \"email\": \"dev.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 3\n    }\n}"
						},
						{
							"name": "01 - Fetch All Users - Filter By Type",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users?type=1",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "type",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 23:48:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 2,\n            \"username\": \"dev.lucasmartins@gmail.com\",\n            \"email\": \"dev.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins (Contabilidade)\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 2\n    }\n}"
						},
						{
							"name": "01 - Fetch All Users - Filter By Email",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users?email=mts.lucasmartins@gmail.com",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "mts.lucasmartins@gmail.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 23:49:55 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						},
						{
							"name": "01 - Fetch All Users - Filter By Username",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users?username=mts.lucasmartins@gmail.com",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "username",
											"value": "mts.lucasmartins@gmail.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 23:49:15 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						},
						{
							"name": "01 - Fetch All Users - Filter By Id",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users?id=20",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									],
									"query": [
										{
											"key": "id",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 23:47:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						}
					]
				},
				{
					"name": "02 - Fetch User By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "20"
								}
							]
						}
					},
					"response": [
						{
							"name": "01 - Fetch All Users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "Cowboy"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Xss-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000 ; includeSubDomains"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 09 Sep 2019 17:48:56 GMT"
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"id\": 2,\n            \"username\": \"dev.lucasmartins@gmail.com\",\n            \"email\": \"dev.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 20,\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 2,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        },\n        {\n            \"id\": 30,\n            \"username\": \"lucas@ottimizza.com.br\",\n            \"email\": \"lucas@ottimizza.com.br\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"type\": 1,\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 1\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 3\n    }\n}"
						}
					]
				},
				{
					"name": "03 - Create User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ce1820ac-0336-41a6-acc5-d3a7f21a30dc",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"mts4.lucasmartins3@gmail.com\",\n\t\"firstName\": \"Lucas\",\n\t\"lastName\": \"Martins\",\n\t\"email\": \"mts4.lucasmartins3@gmail.com\",\n\t\"password\": \"ottimizza\",\n\t\"type\": 1,\n\t\"activated\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 - Patch User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"firstName\": \"Lucas\",\n\t\"lastName\": \"Martins\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "20"
								}
							]
						},
						"description": "# Method for making partial changes to an existing user.\n\n---\n### URL Params\n> Will change only the values passed on the body of the request. <br>\n> Null values are ignored.\n\n## **Acceptable Arguments**:\n```\nfirstName=[string]\nlastName=[string]\n```"
					},
					"response": [
						{
							"name": "03 - Patch User - Update First Name",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\": \"Lucas\"\n}"
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/users/:id",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "20",
											"description": "The ID of the user being updated."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 10 Sep 2019 00:09:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"record\": {\n        \"id\": 20,\n        \"username\": \"mts.lucasmartins@gmail.com\",\n        \"email\": \"mts.lucasmartins@gmail.com\",\n        \"firstName\": \"Lucas\",\n        \"lastName\": \"Martins\",\n        \"type\": 2,\n        \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n        \"organizationId\": 1\n    }\n}"
						}
					]
				}
			],
			"description": "# Data Transfer Object (DTO)\n\n```\n\tid=[number]\n\tusername=[string]\n\temail=[string]\n\tfirstName=[string]\n\tlastName=[string]\n\ttype=[number]\n\tavatar=[string]\n\torganizationId=[number]\n\torganization=[OrganizationDTO]\n```",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e4a3d592-d0c7-4e44-8088-10b65cc14c9c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e09f47e2-f405-485f-bc36-ce255ce1b4f1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Customers",
					"item": [
						{
							"name": "Customers Invited By Organization Id.",
							"item": [
								{
									"name": "Find Users By Organizations (Authenticated)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
												"exec": [
													"const username = pm.globals.get(\"username\");",
													"const password = pm.globals.get(\"password\");",
													"",
													"const client_id = pm.globals.get(\"client_id\");",
													"const client_secret = pm.globals.get(\"client_secret\");",
													"",
													"const url = pm.globals.get(\"oauth2_server_url\");",
													"",
													"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
													"",
													"pm.sendRequest({",
													"    url: url + '/oauth/token?grant_type=password',",
													"    method: 'POST',",
													"    header: {",
													"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
													"    },",
													"    body: {",
													"        mode: 'urlencoded',",
													"        urlencoded: [",
													"            { key: \"username\", value: username },",
													"            { key: \"password\", value: password },",
													"        ]",
													"    }",
													"}, function (err, response) {",
													"   pm.globals.set(\"access_token\", response.json().access_token);",
													"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f0337bcc-9905-4ed2-9205-e4c257d1c43e",
												"exec": [
													"//\r",
													"pm.test(\"Response Status must be 200 (OK).\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// example using pm.response.to.be*\r",
													"pm.test(\"Response must have a JSON body.\", function () {\r",
													"    pm.response.to.be.ok; \r",
													"    pm.response.to.be.json; \r",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{oauth2_server_url}}/api/organizations/:id/custumers_invited",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"organizations",
												":id",
												"custumers_invited"
											],
											"variable": [
												{
													"key": "id",
													"value": "82"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Organizations (Not Authenticated)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
												"exec": [
													"const url = pm.globals.get(\"oauth2_server_url\");",
													"",
													"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "73d536ba-cb7b-47c4-8bb8-89128d2b2c0c",
												"exec": [
													"pm.test(\"assert that the status code is 401 Unauthorized.\", function () {\r",
													"    pm.response.to.be.unauthorized;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"assert that the response has a valid JSON body.\", function () {\r",
													"     pm.response.to.be.json; \r",
													"}); \r",
													"\r",
													"pm.test(\"assert that the response body has error description.\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"error\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"unauthorized\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Full authentication is required to access this resource\");\r",
													"    \r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "Set-Cookie",
												"value": "{{cookie}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{oauth2_server_url}}/api/organizations",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"organizations"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Customers By Organization Id.",
							"item": [
								{
									"name": "Find Users By Organizations (Authenticated)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
												"exec": [
													"const username = pm.globals.get(\"username\");",
													"const password = pm.globals.get(\"password\");",
													"",
													"const client_id = pm.globals.get(\"client_id\");",
													"const client_secret = pm.globals.get(\"client_secret\");",
													"",
													"const url = pm.globals.get(\"oauth2_server_url\");",
													"",
													"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
													"",
													"pm.sendRequest({",
													"    url: url + '/oauth/token?grant_type=password',",
													"    method: 'POST',",
													"    header: {",
													"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
													"    },",
													"    body: {",
													"        mode: 'urlencoded',",
													"        urlencoded: [",
													"            { key: \"username\", value: username },",
													"            { key: \"password\", value: password },",
													"        ]",
													"    }",
													"}, function (err, response) {",
													"   pm.globals.set(\"access_token\", response.json().access_token);",
													"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f0337bcc-9905-4ed2-9205-e4c257d1c43e",
												"exec": [
													"//\r",
													"pm.test(\"Response Status must be 200 (OK).\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// example using pm.response.to.be*\r",
													"pm.test(\"Response must have a JSON body.\", function () {\r",
													"    pm.response.to.be.ok; \r",
													"    pm.response.to.be.json; \r",
													"}); "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{oauth2_server_url}}/api/organizations/:id/custumers",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"organizations",
												":id",
												"custumers"
											],
											"variable": [
												{
													"key": "id",
													"value": "82"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "List Organizations (Not Authenticated)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
												"exec": [
													"const url = pm.globals.get(\"oauth2_server_url\");",
													"",
													"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "73d536ba-cb7b-47c4-8bb8-89128d2b2c0c",
												"exec": [
													"pm.test(\"assert that the status code is 401 Unauthorized.\", function () {\r",
													"    pm.response.to.be.unauthorized;\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"assert that the response has a valid JSON body.\", function () {\r",
													"     pm.response.to.be.json; \r",
													"}); \r",
													"\r",
													"pm.test(\"assert that the response body has error description.\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"error\");\r",
													"    pm.expect(pm.response.text()).to.include(\"error_description\");\r",
													"    pm.expect(pm.response.text()).to.include(\"unauthorized\");\r",
													"    pm.expect(pm.response.text()).to.include(\"Full authentication is required to access this resource\");\r",
													"    \r",
													"    \r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "Set-Cookie",
												"value": "{{cookie}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{oauth2_server_url}}/api/organizations",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"api",
												"organizations"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Invite Customer",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5d4fa912-67ad-49a7-8a83-c4560f8f2b19",
										"exec": [
											"const username = pm.globals.get(\"username\");",
											"const password = pm.globals.get(\"password\");",
											"",
											"const client_id = pm.globals.get(\"client_id\");",
											"const client_secret = pm.globals.get(\"client_secret\");",
											"",
											"const url = pm.globals.get(\"oauth2_server_url\");",
											"",
											"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
											"",
											"pm.sendRequest({",
											"    url: url + '/oauth/token?grant_type=password',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
											"    },",
											"    body: {",
											"        mode: 'urlencoded',",
											"        urlencoded: [",
											"            { key: \"username\", value: username },",
											"            { key: \"password\", value: password },",
											"        ]",
											"    }",
											"}, function (err, response) {",
											"   pm.globals.set(\"access_token\", response.json().access_token);",
											"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{access_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"lucas@ottimizza.com.br\"\n}"
								},
								"url": {
									"raw": "{{oauth2_server_url}}/api/organizations/:id/customers/invite",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"organizations",
										":id",
										"customers",
										"invite"
									],
									"variable": [
										{
											"key": "id",
											"value": "82"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "01 - Fetch Organizations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fce98bf5-59cf-4488-9eb1-89319229c7e8",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/organizations?=&page_size=10&page_index=0",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							],
							"query": [
								{
									"key": "",
									"value": ""
								},
								{
									"key": "page_size",
									"value": "10"
								},
								{
									"key": "page_index",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "02 - Fetch Organization By Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f0337bcc-9905-4ed2-9205-e4c257d1c43e",
								"exec": [
									"//\r",
									"pm.test(\"Response Status must be 200 (OK).\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"Response must have a JSON body.\", function () {\r",
									"    pm.response.to.be.ok; \r",
									"    pm.response.to.be.json; \r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/organizations/:id",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "03 - Create Organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f0337bcc-9905-4ed2-9205-e4c257d1c43e",
								"exec": [
									"//\r",
									"pm.test(\"Response Status must be 200 (OK).\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"Response must have a JSON body.\", function () {\r",
									"    pm.response.to.be.ok; \r",
									"    pm.response.to.be.json; \r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Sebastiana e Carla Alimentos ME\",\n    \"cnpj\": \"49.536.337/0001-08\",\n    \"organizationId\": 1\n}"
						},
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/organizations",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "04 - Patch Organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f0337bcc-9905-4ed2-9205-e4c257d1c43e",
								"exec": [
									"//\r",
									"pm.test(\"Response Status must be 200 (OK).\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"Response must have a JSON body.\", function () {\r",
									"    pm.response.to.be.ok; \r",
									"    pm.response.to.be.json; \r",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Iago e Jaqueline Entregas Expressas ME #Renamed\"\n}"
						},
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/organizations/:organizationId",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"organizations",
								":organizationId"
							],
							"variable": [
								{
									"key": "organizationId",
									"value": "81"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "# Data Transfer Object (DTO)\n\n```\n\tid=[number]\n\tname=[string]\n\ttype=[number]\n\tcnpj=[string]\n\tcodigoERP=[string]\n\temail=[number]\n\tavatar=[string]\n\torganizationId=[number]\n```\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8bea1dfc-f34a-43f9-9d97-5c11101a0af8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "062009b3-9415-45d8-97b9-5a7adaac746e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OAuth - Clients",
			"item": [
				{
					"name": "Create OAuth2 Client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.environment.get(\"username\");",
									"const password = pm.environment.get(\"password\");",
									"",
									"const client_id = pm.environment.get(\"client_id\");",
									"const client_secret = pm.environment.get(\"client_secret\");",
									"",
									"const url = pm.environment.get(\"base_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.environment.set(\"access_token\", response.json().access_token);",
									"   pm.environment.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Tareffa Dashboard\", \"description\": \"App Indicadores Tareffa.\",\n\t\"redirectUris\": \"http://localhost:4200/login,https://tareffa-dashboard.herokuapp.com/login\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/oauth_clients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"oauth_clients"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OAuth - Tokens & Authorization Flows",
			"item": [
				{
					"name": "Request Token",
					"item": [],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Grant Type - Authorization Code",
					"item": [
						{
							"name": "Exchange Code for Access Token",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "72e9208c85fed78cb43fec9f953662664ab5f649",
											"type": "string"
										},
										{
											"key": "username",
											"value": "1defe81df9442d2b74c2",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://development-oauth-server.herokuapp.com/oauth/token?grant_type=authorization_code&code=y7wtET&redirect_uri=http://localhost:4200/login",
									"protocol": "https",
									"host": [
										"development-oauth-server",
										"herokuapp",
										"com"
									],
									"path": [
										"oauth",
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "authorization_code"
										},
										{
											"key": "code",
											"value": "y7wtET"
										},
										{
											"key": "redirect_uri",
											"value": "http://localhost:4200/login"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Grant Type  - Implicit (Not Recommended)",
					"item": [],
					"_postman_isSubFolder": true
				},
				{
					"name": "Grant Type - Password",
					"item": [
						{
							"name": "Request Access Token - Password Flow",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "username",
											"value": "{{username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{oauth2_server_url}}/oauth/token?grant_type=password",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"oauth",
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "password"
										}
									]
								}
							},
							"response": [
								{
									"name": "Request Access Token (FormData) - Password Flow",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "username",
													"value": "{{username}}",
													"type": "text"
												},
												{
													"key": "password",
													"value": "{{password}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "password",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{oauth2_server_url}}/oauth/token?grant_type=password",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "password"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 22 Jul 2019 16:32:58 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"b400c612-2d08-4ce3-969b-34a96589d4b6\",\n    \"token_type\": \"bearer\",\n    \"refresh_token\": \"17f266d4-2320-4f1f-a674-3fc58ecaa350\",\n    \"expires_in\": 3599,\n    \"scope\": \"read write trust\"\n}"
								},
								{
									"name": "Request Access Token - Password Flow",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{oauth2_server_url}}/oauth/token?grant_type=password&username={{username}}&password={{password}}",
											"host": [
												"{{oauth2_server_url}}"
											],
											"path": [
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "password"
												},
												{
													"key": "username",
													"value": "{{username}}"
												},
												{
													"key": "password",
													"value": "{{password}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Cache-Control",
											"value": "no-store"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Mon, 22 Jul 2019 16:32:58 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"b400c612-2d08-4ce3-969b-34a96589d4b6\",\n    \"token_type\": \"bearer\",\n    \"refresh_token\": \"17f266d4-2320-4f1f-a674-3fc58ecaa350\",\n    \"expires_in\": 3599,\n    \"scope\": \"read write trust\"\n}"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Grant Type - Refresh",
					"item": [
						{
							"name": "Request Access Token - Refresh Token Flow",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "47a660a6-b156-4d01-a749-54c19066a9d4",
										"exec": [
											"const username = pm.globals.get(\"username\");",
											"const password = pm.globals.get(\"password\");",
											"",
											"const client_id = pm.globals.get(\"client_id\");",
											"const client_secret = pm.globals.get(\"client_secret\");",
											"",
											"const url = pm.globals.get(\"oauth2_server_url\");",
											"",
											"pm.sendRequest({",
											"    url: url + '/oauth/token?grant_type=password',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
											"    },",
											"    body: {",
											"        mode: 'urlencoded',",
											"        urlencoded: [",
											"            { key: \"username\", value: username },",
											"            { key: \"password\", value: password },",
											"        ]",
											"    }",
											"}, function (err, response) {",
											"   pm.globals.set(\"access_token\", response.json().access_token);",
											"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{client_secret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{client_id}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{oauth2_server_url}}/oauth/token?grant_type=refresh_token&refresh_token={{refresh_token}}",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"oauth",
										"token"
									],
									"query": [
										{
											"key": "grant_type",
											"value": "refresh_token"
										},
										{
											"key": "refresh_token",
											"value": "{{refresh_token}}"
										},
										{
											"key": "client_id",
											"value": "{{client_id}}",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "00 - Token Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48398e79-2553-4400-b0b6-72f1b911a275",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/oauth/userinfo",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"oauth",
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "af350d17-8d25-445c-afb3-adfaf7959217",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "c8e7c267-90da-4990-b499-fd1d3d13edb9",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://localhost:9092/oauth/revoke_token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9092",
							"path": [
								"oauth",
								"revoke_token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dcaefb02-f81b-4300-bd91-9626f5c8f3f4",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{client_secret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{client_id}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{oauth2_server_url}}/oauth/check_token?token={{access_token}}",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"oauth",
								"check_token"
							],
							"query": [
								{
									"key": "token",
									"value": "{{access_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Tokens by Client Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "74fa924a-7ef3-4c3e-87aa-2734868af9f0",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:9092/tokens",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9092",
							"path": [
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "User INfo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "dcaefb02-f81b-4300-bd91-9626f5c8f3f4",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{oauth2_server_url}}/user/info",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"user",
								"info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "00 - Customers",
			"item": [
				{
					"name": "Get Customers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b6a6a08-f0b4-4cd5-8c27-47a63441dfd4",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"// pm.sendRequest({ url: url + '/logout',  method: 'GET' }, function (err, response) { });",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/customers?page_size=5&page_index=0",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							],
							"query": [
								{
									"key": "page_size",
									"value": "5"
								},
								{
									"key": "page_index",
									"value": "0"
								}
							]
						},
						"description": "Busca todos os clientes da contabilidade relacionada ao contador realizando o request."
					},
					"response": [
						{
							"name": "Get Customers - Custom Pagination",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/customers?page_size=5&page_index=0",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "page_size",
											"value": "5"
										},
										{
											"key": "page_index",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 26 Aug 2019 18:43:05 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 80\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 5,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						},
						{
							"name": "Get Customers - Email Filter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/customers?email=lucas",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "email",
											"value": "lucas"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 26 Aug 2019 18:42:22 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 80\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						},
						{
							"name": "Get Customers - No URL Params",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{oauth2_server_url}}/api/v1/customers",
									"host": [
										"{{oauth2_server_url}}"
									],
									"path": [
										"api",
										"v1",
										"customers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 26 Aug 2019 18:40:40 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"records\": [\n        {\n            \"username\": \"mts.lucasmartins@gmail.com\",\n            \"email\": \"mts.lucasmartins@gmail.com\",\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Martins\",\n            \"avatar\": \"https://avatars2.githubusercontent.com/u/20546341\",\n            \"organizationId\": 80\n        }\n    ],\n    \"pageInfo\": {\n        \"hasNext\": false,\n        \"hasPrevious\": false,\n        \"pageSize\": 10,\n        \"pageIndex\": 0,\n        \"totalPages\": 1,\n        \"totalElements\": 1\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Fetch All Invited Users",
			"item": [
				{
					"name": "01 - Fetch All Invited Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0080eb8f-8253-4c29-9934-b9471ada987f",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/users/invited",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"invited"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/user/info",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"user",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Info Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d70166f1-6c6b-4c8d-a5c9-21c83da3c8e9",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/user/info",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"user",
								"info"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Receita",
			"item": [
				{
					"name": "Get Organization Info by CNPJ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00de1f31-6755-48cc-812a-b4a814c94d44",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d862565c-b381-4766-87e3-6c11ada1d3c0",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/receitaws/cnpj/27865757000102",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"receitaws",
								"cnpj",
								"27865757000102"
							]
						}
					},
					"response": []
				},
				{
					"name": "00 - User Info Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "48398e79-2553-4400-b0b6-72f1b911a275",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/receitaws/cnpj/24367904000118",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"receitaws",
								"cnpj",
								"24367904000118"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "JSON Import",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00de1f31-6755-48cc-812a-b4a814c94d44",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d862565c-b381-4766-87e3-6c11ada1d3c0",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"email\": \"cardioclinicafoz@hotmail.com\",\r\n    \"firstName\": \"cardioclinicafoz@hotmail.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"CLINICA DE ALERGIA E CARDIOLOGIA LTDA\",\r\n    \"organizationCnpj\": \"09.472.204/0001-08\",\r\n    \"organizationCode\": 1320,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"weissjoi@weissjoi.com.br\",\r\n    \"firstName\": \"weissjoi@weissjoi.com.br\",\r\n    \"organizationName\": \"IRMÃOS WEISS LOCADORA DE VEÍCULOS LTDA\",\r\n    \"organizationCnpj\": \"05.996.231/0001-10\",\r\n    \"organizationCode\": 375,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipe@pletzvieira.com.br\",\r\n    \"firstName\": \"felipe@pletzvieira.com.br\",\r\n    \"organizationName\": \"PLETZ & VIEIRA LTDA\",\r\n    \"organizationCnpj\": \"02.482.003/0001-34\",\r\n    \"organizationCode\": 435,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"fleischer@terra.com.br\",\r\n    \"firstName\": \"fleischer@terra.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FLEISCHER PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"01.498.434/0001-26\",\r\n    \"organizationCode\": 125,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipecassol@hotmail.com\",\r\n    \"firstName\": \"felipecassol@hotmail.com\",\r\n    \"organizationName\": \"CASSOL E FILHOS EMPREENDIMENTOS E PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"18.916.456/0001-61\",\r\n    \"organizationCode\": 481,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br\",\r\n    \"firstName\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FOZCOBRA AGENCIA DE COBRANCAS LTDA\",\r\n    \"organizationCnpj\": \"00.131.200/0001-83\",\r\n    \"organizationCode\": 1389,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"JMEDICAL COMERCIO DE MEDICAMENTOS EIRELI ? EPP\",\r\n    \"organizationCnpj\": \"14.885.685/0001-62\",\r\n    \"organizationCode\": 1150,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"RESSEG ADMINISTRACAO E PARTICIPACOES LTDA\",\r\n    \"organizationCnpj\": \"25.211.817/0001-30\",\r\n    \"organizationCode\": 1514,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"darlan@vibmaster.com.br\",\r\n    \"firstName\": \"darlan@vibmaster.com.br\",\r\n    \"organizationName\": \"VIB MASTER MANUTENÇÃO DE EQUIPAMENTOS EIRELI\",\r\n    \"organizationCnpj\": \"16.518.187/0001-50\",\r\n    \"organizationCode\": 418,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/import/json",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"import",
								"json"
							]
						}
					},
					"response": []
				},
				{
					"name": "JSON Import Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00de1f31-6755-48cc-812a-b4a814c94d44",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d862565c-b381-4766-87e3-6c11ada1d3c0",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"email\": \"cardioclinicafoz@hotmail.com\",\r\n    \"firstName\": \"cardioclinicafoz@hotmail.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"CLINICA DE ALERGIA E CARDIOLOGIA LTDA\",\r\n    \"organizationCnpj\": \"09.472.204/0001-08\",\r\n    \"organizationCode\": 1320,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"weissjoi@weissjoi.com.br\",\r\n    \"firstName\": \"weissjoi@weissjoi.com.br\",\r\n    \"organizationName\": \"IRMÃOS WEISS LOCADORA DE VEÍCULOS LTDA\",\r\n    \"organizationCnpj\": \"05.996.231/0001-10\",\r\n    \"organizationCode\": 375,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipe@pletzvieira.com.br\",\r\n    \"firstName\": \"felipe@pletzvieira.com.br\",\r\n    \"organizationName\": \"PLETZ & VIEIRA LTDA\",\r\n    \"organizationCnpj\": \"02.482.003/0001-34\",\r\n    \"organizationCode\": 435,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"fleischer@terra.com.br\",\r\n    \"firstName\": \"fleischer@terra.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FLEISCHER PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"01.498.434/0001-26\",\r\n    \"organizationCode\": 125,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipecassol@hotmail.com\",\r\n    \"firstName\": \"felipecassol@hotmail.com\",\r\n    \"organizationName\": \"CASSOL E FILHOS EMPREENDIMENTOS E PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"18.916.456/0001-61\",\r\n    \"organizationCode\": 481,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br\",\r\n    \"firstName\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FOZCOBRA AGENCIA DE COBRANCAS LTDA\",\r\n    \"organizationCnpj\": \"00.131.200/0001-83\",\r\n    \"organizationCode\": 1389,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"JMEDICAL COMERCIO DE MEDICAMENTOS EIRELI ? EPP\",\r\n    \"organizationCnpj\": \"14.885.685/0001-62\",\r\n    \"organizationCode\": 1150,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"RESSEG ADMINISTRACAO E PARTICIPACOES LTDA\",\r\n    \"organizationCnpj\": \"25.211.817/0001-30\",\r\n    \"organizationCode\": 1514,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"darlan@vibmaster.com.br\",\r\n    \"firstName\": \"darlan@vibmaster.com.br\",\r\n    \"organizationName\": \"VIB MASTER MANUTENÇÃO DE EQUIPAMENTOS EIRELI\",\r\n    \"organizationCnpj\": \"16.518.187/0001-50\",\r\n    \"organizationCode\": 418,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/import/json3",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"import",
								"json3"
							]
						}
					},
					"response": []
				},
				{
					"name": "JSON Import Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00de1f31-6755-48cc-812a-b4a814c94d44",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d862565c-b381-4766-87e3-6c11ada1d3c0",
								"exec": [
									"const username = pm.globals.get(\"username\");",
									"const password = pm.globals.get(\"password\");",
									"",
									"const client_id = pm.globals.get(\"client_id\");",
									"const client_secret = pm.globals.get(\"client_secret\");",
									"",
									"const url = pm.globals.get(\"oauth2_server_url\");",
									"",
									"pm.sendRequest({",
									"    url: url + '/oauth/token?grant_type=password',",
									"    method: 'POST',",
									"    header: {",
									"        'Authorization': `Basic ${btoa(client_id + ':' + client_secret)}`",
									"    },",
									"    body: {",
									"        mode: 'urlencoded',",
									"        urlencoded: [",
									"            { key: \"username\", value: username },",
									"            { key: \"password\", value: password },",
									"        ]",
									"    }",
									"}, function (err, response) {",
									"   pm.globals.set(\"access_token\", response.json().access_token);",
									"   pm.globals.set(\"refresh_token\", response.json().refresh_token);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"email\": \"cardioclinicafoz@hotmail.com\",\r\n    \"firstName\": \"cardioclinicafoz@hotmail.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"CLINICA DE ALERGIA E CARDIOLOGIA LTDA\",\r\n    \"organizationCnpj\": \"09.472.204/0001-08\",\r\n    \"organizationCode\": 1320,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"weissjoi@weissjoi.com.br\",\r\n    \"firstName\": \"weissjoi@weissjoi.com.br\",\r\n    \"organizationName\": \"IRMÃOS WEISS LOCADORA DE VEÍCULOS LTDA\",\r\n    \"organizationCnpj\": \"05.996.231/0001-10\",\r\n    \"organizationCode\": 375,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipe@pletzvieira.com.br\",\r\n    \"firstName\": \"felipe@pletzvieira.com.br\",\r\n    \"organizationName\": \"PLETZ & VIEIRA LTDA\",\r\n    \"organizationCnpj\": \"02.482.003/0001-34\",\r\n    \"organizationCode\": 435,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"fleischer@terra.com.br\",\r\n    \"firstName\": \"fleischer@terra.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FLEISCHER PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"01.498.434/0001-26\",\r\n    \"organizationCode\": 125,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"felipecassol@hotmail.com\",\r\n    \"firstName\": \"felipecassol@hotmail.com\",\r\n    \"organizationName\": \"CASSOL E FILHOS EMPREENDIMENTOS E PARTICIPAÇÕES LTDA\",\r\n    \"organizationCnpj\": \"18.916.456/0001-61\",\r\n    \"organizationCode\": 481,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br\",\r\n    \"firstName\": \"marceli@fozcobra.com.br,eduardo@fozcobra.com.br,leticia.c@depaulacontadores.com.br,derseudepaula@depaulacontadores.com.br,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"FOZCOBRA AGENCIA DE COBRANCAS LTDA\",\r\n    \"organizationCnpj\": \"00.131.200/0001-83\",\r\n    \"organizationCode\": 1389,\r\n    \"accountingCnpj\": \"30.125.408/0001-50\",\r\n    \"accountingName\": \"DE PAULA ESCOLA DE NEGÓCIOS E COWORKING LTDA\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"JMEDICAL COMERCIO DE MEDICAMENTOS EIRELI ? EPP\",\r\n    \"organizationCnpj\": \"14.885.685/0001-62\",\r\n    \"organizationCode\": 1150,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"diretoria@sulmedic.com\",\r\n    \"firstName\": \"diretoria@sulmedic.com,suporte@ottimizza.com.br\",\r\n    \"organizationName\": \"RESSEG ADMINISTRACAO E PARTICIPACOES LTDA\",\r\n    \"organizationCnpj\": \"25.211.817/0001-30\",\r\n    \"organizationCode\": 1514,\r\n    \"accountingCnpj\": \"05.330.373/0001-44\",\r\n    \"accountingName\": \"RS CONTABILIDADE S/S. - EPP\",\r\n    \"authorities\": \"READ\"\r\n  },\r\n  {\r\n    \"email\": \"darlan@vibmaster.com.br\",\r\n    \"firstName\": \"darlan@vibmaster.com.br\",\r\n    \"organizationName\": \"VIB MASTER MANUTENÇÃO DE EQUIPAMENTOS EIRELI\",\r\n    \"organizationCnpj\": \"16.518.187/0001-50\",\r\n    \"organizationCode\": 418,\r\n    \"accountingCnpj\": \"84.693.282/0001-40\",\r\n    \"accountingName\": \"ORGANIZACAO EPOCA S/S - EPP\",\r\n    \"authorities\": \"READ\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{oauth2_server_url}}/api/v1/import/test",
							"host": [
								"{{oauth2_server_url}}"
							],
							"path": [
								"api",
								"v1",
								"import",
								"test"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3000325a-5a7b-4e5b-a6bf-5de0cf684d9c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e5e084e7-7637-4a2b-930d-711fd3bad4fc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}